$date
  Fri Nov 15 23:58:09 2024
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module adder_tb $end
$var reg 4 ! a[3:0] $end
$var reg 4 " b[3:0] $end
$var reg 4 # r[3:0] $end
$var reg 1 $ cout $end
$scope module uut $end
$var reg 4 % a[3:0] $end
$var reg 4 & b[3:0] $end
$var reg 4 ' r[3:0] $end
$var reg 1 ( cout $end
$var reg 1 ) c1 $end
$var reg 1 * c2 $end
$var reg 1 + c3 $end
$var reg 1 , c4 $end
$scope module fa0 $end
$var reg 1 - x $end
$var reg 1 . y $end
$var reg 1 / cin $end
$var reg 1 0 sum $end
$var reg 1 1 cout $end
$upscope $end
$scope module fa1 $end
$var reg 1 2 x $end
$var reg 1 3 y $end
$var reg 1 4 cin $end
$var reg 1 5 sum $end
$var reg 1 6 cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 7 x $end
$var reg 1 8 y $end
$var reg 1 9 cin $end
$var reg 1 : sum $end
$var reg 1 ; cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 < x $end
$var reg 1 = y $end
$var reg 1 > cin $end
$var reg 1 ? sum $end
$var reg 1 @ cout $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0001 !
b0010 "
b0011 #
0$
b0001 %
b0010 &
b0011 '
0(
0)
0*
0+
0,
1-
0.
0/
10
01
02
13
04
15
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
#10000000
b0101 !
b1011 "
b0000 #
1$
b0101 %
b1011 &
b0000 '
1(
1)
1*
1+
1,
1.
00
11
14
05
16
17
19
0:
1;
1=
1>
0?
1@
#20000000
b1111 !
b0001 "
b1111 %
b0001 &
12
03
1<
0=
#30000000
